Run with native agent:
java -agentlib:native-image-agent=config-output-dir=./native -server -classpath /usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/*:/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/plugins/*:/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/opt/* -DPNAME=QPBRKR -XX:+UseConcMarkSweepGC -XX:+HeapDumpOnOutOfMemoryError -Xmx512m -XX:MaxDirectMemorySize=1536m -DQPID_HOME=/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6 -DQPID_WORK=/var/qpidwork org.apache.qpid.server.Main


Working:
native-image --no-fallback --enable-url-protocols=file -H:DefaultLocale=en -H:EnableURLProtocols=http,https -cp jar:/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/* --verbose -J-Xmx16g -J-XX:+HeapDumpOnOutOfMemoryError -J-XX:MaxDirectMemorySize=1536m -J-server -DPNAME=QPBRKR -DQPID_HOME=/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6 -DQPID_WORK=/var/qpidwork -jar qpid-broker-8.0.6.jar qpid


Experimental:
native-image --initialize-at-build-time=org.apache.qpid.server.configuration.CommonProperties --no-fallback -H:EnableURLProtocols=http,https -cp jar:/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/* --verbose -J-Xmx16g -jar qpid-broker-8.0.6.jar qpid     (logback not initialized)


Qpid Java command line:
java -server -classpath /usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/*:/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/plugins/*:/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6/lib/opt/* -DPNAME=QPBRKR -XX:+UseConcMarkSweepGC -XX:+HeapDumpOnOutOfMemoryError -Xmx512m -XX:MaxDirectMemorySize=1536m -DQPID_HOME=/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6 -DQPID_WORK=/var/qpidwork org.apache.qpid.server.Main

qpid-server -DPNAME=QPBRKR -DQPID_HOME=/usr/local/src/qpid/Qpid4Graal/native/qpid-broker/8.0.6 -DQPID_WORK=/var/qpidwork


Specifying Configuration Files as Native Image Arguments

A directory containing configuration files that is not part of the class path can be specified to native-image via -H:ConfigurationFileDirectories=/path/to/config-dir/. This directory must directly contain all four files: jni-config.json, reflect-config.json, proxy-config.json and resource-config.json. A directory with the same four configuration files that is on the class path, but not in META-INF/native-image/, can be provided via -H:ConfigurationResourceRoots=path/to/resources/. Both -H:ConfigurationFileDirectories and -H:ConfigurationResourceRoots can also take a comma-separated list of directories.




Configuration storage types (using -st <type> option)
JSON
    the default one which persists content to disk in a JSON file

Memory
    operates only in-memory and so does not retain changes across broker restarts and always relies on the current 'Initial Configuration' to provide the configuration to start the broker with.

DERBY

    stores configuration in embedded derby store
BDB
    stores configuration in Berkeley DB store

JDBC
    stores configuration in external RDBMS using JDBC



Use JDBC for configuration store:
./qpid-server -st JDBC \
  -prop "systemConfig.connectionUrl=jdbc:derby://localhost:1527/path/to/store;create=true" \
  -prop "systemConfig.username=test" -prop "systemConfig.password=password"


./qpid-start.sh JDBC "systemConfig.connectionUrl=jdbc:postgresql://10.0.0.183:5432/qpid" "systemConfig.username=graalvm" "systemConfig.password=graalvm"


Warning: Method org.apache.qpid.server.model.Binding.getDestination() not found.
Warning: Could not resolve org.h2.Driver for reflection configuration. Reason: java.lang.ClassNotFoundException: org.h2.Driver.
Warning: Could not resolve com.sun.rowset.providers.RIOptimisticProvider for reflection configuration. Reason: java.lang.ClassNotFoundException: com.sun.rowset.providers.RIOptimisticProvider.
Warning: Method org.apache.qpid.server.model.Binding.getDestination() not found.
Warning: Could not resolve org.h2.Driver for reflection configuration. Reason: java.lang.ClassNotFoundException: org.h2.Driver.
Warning: Could not resolve com.sun.rowset.providers.RIOptimisticProvider for reflection configuration. Reason: java.lang.ClassNotFoundException: com.sun.rowset.providers.RIOptimisticProvider.

The bundle named: com/sun/rowset/RowSetResourceBundle, has not been found. If the bundle is part of a module, verify the bundle name is a fully qualified class name. Otherwise verify the bundle path is accessible in the classpath.



